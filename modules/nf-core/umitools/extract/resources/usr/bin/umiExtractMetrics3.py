#!/usr/bin/env python3

__author__ = "David Brawand"
__copyright__ = "King's College Hospital 2018"
__version__ = "0.0.1"
__maintainer__ = "David Brawand"
__email__ = "dbrawand@nhs.net"
__status__ = "development"
__doc__ = """
Converts umi_tools extract logging output
to picard-style metrics.

Parameters
----------
    stdin
        umi_tools extract log

Returns
-------
    stdout
        picard style metrics
"""

import sys
import re
from collections import OrderedDict


def main(args):
    # extract relevant metrics
    metrics = OrderedDict()
    for i, line in enumerate(sys.stdin):
        if not i:
            header = [
                '# umitools.extract.metrics',
                line.strip(),
                '# umitools.extract.metrics'
            ]
        elif i == 1:
            header.append(line.rstrip())
        elif line.startswith('# pattern') or line.startswith('# quality_filter_threshold'):
            header[2] += line[line.find(':')-1:].rstrip()
        else:
            m = re.match(r'.*INFO\s(\D+)(\d+)$', line)
            if m:
                k = m.group(1).strip().replace(
                    ' ', '_').replace(':', '').upper()
                metrics[k] = m.group(2)

    # calculate additional metrics
    if 'INPUT_READS' in list(metrics.keys()):
        if 'READS_OUTPUT' in list(metrics.keys()):
            passed = float(metrics['READS_OUTPUT']) / \
                float(metrics['INPUT_READS'])
            metrics['READS_OUTPUT_FRAC'] = '{:.3}'.format(passed)
        if 'FILTERED_UMI_QUALITY' in list(metrics.keys()):
            lowqual = float(metrics['FILTERED_UMI_QUALITY']) / \
                float(metrics['INPUT_READS'])
            metrics['FILTERED_UMI_QUALITY_FRAC'] = '{:.3}'.format(
                lowqual)
        if 'FILTERED_UMI_QUALITY' in list(metrics.keys()) and 'READS_OUTPUT' in list(metrics.keys()):
            umifound = float(int(metrics['READS_OUTPUT'])+int(metrics['FILTERED_UMI_QUALITY'])) / \
                float(metrics['INPUT_READS'])
            metrics['UMI_EXTRACTED_FRAC'] = '{:.3}'.format(umifound)

    ## print metrics
    print(('\n'.join(header)))
    print('')
    print('# UMI EXTRACTION METRICS')
    print(('\t'.join(list(metrics.keys()))))
    print(('\t'.join(list(metrics.values()))))
    print('')


if __name__ == "__main__":
    args = sys.argv[1:]
    main(args)

'''
# custom.read.metrics
# parseTrimlog.py STDIN
# custom.read.metrics
# Started on: 2018-12-04T15:12:23.153607

# BASIC FILTERING METRICS
TOTAL_READS	PASSED_READS	PASSED_FRAC	LENGTH_MEDIAN	LENGTH_MEAN	LENGTH_STD	TILE_MEDIAN_LENGTH_STDTILE_MEDIAN_LENGTH_MIN	TILE_MEDIAN_LENGTH_MAX
1743899, 1743899	1460449, 1473989	0.837, 0.845	107.0, 109.0	124.651838209, 125.173593769	91.8840942662, 91.4073357655	1.509, 1.839	106, 106	111, 114

# output generated by extract -I /srv/data/work/analysis/T454/B0742_12/default/fastq/71bdbfff_1.filtered.fastq.gz -S /srv/data/work/analysis/T454/B0742_12/default/fastq/71bdbfff_1.umi.fastq.gz --bc-pattern2=(?P<umi_1>.{12})(?P<discard_1>ATTGGAGTCCT).* --read2-in=/srv/data/work/analysis/T454/B0742_12/default/fastq/71bdbfff_2.filtered.fastq.gz --read2-out=/srv/data/work/analysis/T454/B0742_12/default/fastq/71bdbfff_2.umi.fastq.gz --quality-filter-threshold=30 --quality-encoding=phred33 --extract-method=regex -L /srv/data/work/analysis/T454/B0742_12/default/metrics/71bdbfff.umiextract
# job started at Tue Dec  4 15:39:15 2018 on 1b571324ead2 -- 866ec397-6619-401d-adb1-e57c46b052b5
# pid: 7, system: Linux 4.9.137-1-MANJARO #1 SMP PREEMPT Tue Nov 13 21:57:33 UTC 2018 x86_64
# blacklist                               : None
# compresslevel                           : 6
# error_correct_cell                      : False
# extract_method                          : regex
# filter_cell_barcode                     : None
# filter_cell_barcodes                    : False
# log2stderr                              : False
# loglevel                                : 1
# pattern                                 : None
# pattern2                                : (?P<umi_1>.{12})(?P<discard_1>ATTGGAGTCCT).*
# prime3                                  : None
# quality_encoding                        : phred33
# quality_filter_mask                     : None
# quality_filter_threshold                : 30
# random_seed                             : None
# read2_in                                : /srv/data/work/analysis/T454/B0742_12/default/fastq/71bdbfff_2.filtered.fastq.gz
# read2_out                               : /srv/data/work/analysis/T454/B0742_12/default/fastq/71bdbfff_2.umi.fastq.gz
# read2_stdout                            : False
# reads_subset                            : None
# reconcile                               : False
# short_help                              : None
# stderr                                  : <open file '<stderr>', mode 'w' at 0x7fb781dcf1e0>
# stdin                                   : <gzip open file '/srv/data/work/analysis/T454/B0742_12/default/fastq/71bdbfff_1.filtered.fastq.gz', mode 'rb' at 0x7fb77f0be9c0 0x7fb77f0bf610>
# stdlog                                  : <open file '/srv/data/work/analysis/T454/B0742_12/default/metrics/71bdbfff.umiextract', mode 'a' at 0x7fb77f0be660>
# stdout                                  : <gzip open file '/srv/data/work/analysis/T454/B0742_12/default/fastq/71bdbfff_1.umi.fastq.gz', mode 'wb' at 0x7fb77fd4aa50 0x7fb781c5bd10>
# timeit_file                             : None
# timeit_header                           : None
# timeit_name                             : all
# whitelist                               : None
2018-12-04 15: 39: 15, 269 INFO Starting barcode extraction
2018-12-04 15: 39: 36, 649 INFO Parsed 100000 reads
2018-12-04 15: 39: 58, 181 INFO Parsed 200000 reads
2018-12-04 15: 40: 19, 504 INFO Parsed 300000 reads
2018-12-04 15: 40: 40, 898 INFO Parsed 400000 reads
2018-12-04 15: 41: 02, 353 INFO Parsed 500000 reads
2018-12-04 15: 41: 23, 771 INFO Parsed 600000 reads
2018-12-04 15: 41: 45, 430 INFO Parsed 700000 reads
2018-12-04 15: 42: 06, 814 INFO Parsed 800000 reads
2018-12-04 15: 42: 27, 973 INFO Parsed 900000 reads
2018-12-04 15: 42: 48, 739 INFO Parsed 1000000 reads
2018-12-04 15: 43: 09, 469 INFO Parsed 1100000 reads
2018-12-04 15: 43: 30, 275 INFO Parsed 1200000 reads
2018-12-04 15: 43: 51, 204 INFO Parsed 1300000 reads
2018-12-04 15: 44: 12, 318 INFO Parsed 1400000 reads
2018-12-04 15: 44: 23, 736 INFO Input Reads: 1454001
2018-12-04 15: 44: 23, 736 INFO regex matches read2: 1260464
2018-12-04 15: 44: 23, 736 INFO Reads output: 1128464
2018-12-04 15: 44: 23, 736 INFO regex does not match read1: 193537
2018-12-04 15: 44: 23, 736 INFO filtered: umi quality: 132000
# job finished in 308 seconds at Tue Dec  4 15:44:23 2018 -- 309.40  0.87  0.00  0.00 -- 866ec397-6619-401d-adb1-e57c46b052b5
'''
